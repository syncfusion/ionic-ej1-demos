import 'syncfusion-javascript/Scripts/ej/web/ej.colorpicker.min';
import { EJComponents } from './core';
import { EventEmitter, IterableDiffers, KeyValueDiffers, Type, ElementRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare const ColorPickerValueAccessor: any;
export declare class ColorPickerComponent extends EJComponents<any, any> implements ControlValueAccessor {
    el: ElementRef;
    cdRef: ChangeDetectorRef;
    private _ejIterableDiffers;
    private _ejkeyvaluediffers;
    buttonText_input: any;
    buttonMode_input: any;
    columns_input: any;
    cssClass_input: any;
    custom_input: any;
    displayInline_input: any;
    enabled_input: any;
    enableOpacity_input: any;
    htmlAttributes_input: any;
    locale_input: any;
    modelType_input: any;
    palette_input: any;
    presetType_input: any;
    showApplyCancel_input: any;
    showClearButton_input: any;
    showPreview_input: any;
    showRecentColors_input: any;
    showSwitcher_input: any;
    showTooltip_input: any;
    toolIcon_input: any;
    tooltipText_input: any;
    buttonText_apply_input: any;
    buttonText_cancel_input: any;
    buttonText_swatches_input: any;
    tooltipText_switcher_input: any;
    tooltipText_addButton_input: any;
    tooltipText_basic_input: any;
    tooltipText_monoChrome_input: any;
    tooltipText_flatColors_input: any;
    tooltipText_seaWolf_input: any;
    tooltipText_webColors_input: any;
    tooltipText_sandy_input: any;
    tooltipText_pinkShades_input: any;
    tooltipText_misty_input: any;
    tooltipText_citrus_input: any;
    tooltipText_vintage_input: any;
    tooltipText_moonLight_input: any;
    tooltipText_candyCrush_input: any;
    tooltipText_currentColor_input: any;
    tooltipText_selectedColor_input: any;
    options: any;
    value_two: any;
    value_twoChange: EventEmitter<any>;
    opacityValue_two: any;
    opacityValue_twoChange: EventEmitter<any>;
    change_output: EventEmitter<{}>;
    ejchange_output: EventEmitter<{}>;
    close_output: EventEmitter<{}>;
    create_output: EventEmitter<{}>;
    destroy_output: EventEmitter<{}>;
    open_output: EventEmitter<{}>;
    select_output: EventEmitter<{}>;
    constructor(el: ElementRef, cdRef: ChangeDetectorRef, _ejIterableDiffers: IterableDiffers, _ejkeyvaluediffers: KeyValueDiffers);
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
}
export declare var EJ_COLORPICKER_COMPONENTS: Type<any>[];
