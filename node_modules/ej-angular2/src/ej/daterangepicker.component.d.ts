import 'syncfusion-javascript/Scripts/ej/web/ej.daterangepicker.min';
import { EJComponents } from './core';
import { EventEmitter, IterableDiffers, KeyValueDiffers, Type, ElementRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare const DateRangePickerValueAccessor: any;
export declare class DateRangePickerComponent extends EJComponents<any, any> implements ControlValueAccessor {
    el: ElementRef;
    cdRef: ChangeDetectorRef;
    private _ejIterableDiffers;
    private _ejkeyvaluediffers;
    allowEdit_input: any;
    buttonText_input: any;
    cssClass_input: any;
    dateFormat_input: any;
    enableTimePicker_input: any;
    enabled_input: any;
    enablePersistence_input: any;
    endDate_input: any;
    height_input: any;
    locale_input: any;
    maxDate_input: any;
    minDate_input: any;
    ranges_input: any;
    separator_input: any;
    startDate_input: any;
    showPopupButton_input: any;
    showRoundedCorner_input: any;
    timeFormat_input: any;
    value_input: any;
    watermarkText_input: any;
    width_input: any;
    options: any;
    beforeClose_output: EventEmitter<{}>;
    beforeOpen_output: EventEmitter<{}>;
    Change_output: EventEmitter<{}>;
    close_output: EventEmitter<{}>;
    create_output: EventEmitter<{}>;
    destroy_output: EventEmitter<{}>;
    open_output: EventEmitter<{}>;
    select_output: EventEmitter<{}>;
    constructor(el: ElementRef, cdRef: ChangeDetectorRef, _ejIterableDiffers: IterableDiffers, _ejkeyvaluediffers: KeyValueDiffers);
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
}
export declare var EJ_DATERANGEPICKER_COMPONENTS: Type<any>[];
