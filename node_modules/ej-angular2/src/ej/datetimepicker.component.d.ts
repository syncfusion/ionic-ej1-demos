import 'syncfusion-javascript/Scripts/ej/web/ej.datetimepicker.min';
import { EJComponents } from './core';
import { EventEmitter, IterableDiffers, KeyValueDiffers, Type, ElementRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare const DateTimePickerValueAccessor: any;
export declare class DateTimePickerComponent extends EJComponents<any, any> implements ControlValueAccessor {
    el: ElementRef;
    cdRef: ChangeDetectorRef;
    private _ejIterableDiffers;
    private _ejkeyvaluediffers;
    allowEdit_input: any;
    buttonText_input: any;
    blackoutDates_input: any;
    cssClass_input: any;
    dateTimeFormat_input: any;
    dayHeaderFormat_input: any;
    depthLevel_input: any;
    disableTimeRanges_input: any;
    enableAnimation_input: any;
    enabled_input: any;
    enablePersistence_input: any;
    enableRTL_input: any;
    enableStrictMode_input: any;
    headerFormat_input: any;
    height_input: any;
    htmlAttributes_input: any;
    interval_input: any;
    locale_input: any;
    maxDateTime_input: any;
    minDateTime_input: any;
    popupPosition_input: any;
    readOnly_input: any;
    showOtherMonths_input: any;
    showPopupButton_input: any;
    showRoundedCorner_input: any;
    specialDates_input: any;
    startDay_input: any;
    startLevel_input: any;
    stepMonths_input: any;
    timeDisplayFormat_input: any;
    timeDrillDown_input: any;
    timePopupWidth_input: any;
    validationMessage_input: any;
    validationRules_input: any;
    value_input: any;
    watermarkText_input: any;
    width_input: any;
    buttonText_done_input: any;
    buttonText_timeNow_input: any;
    buttonText_timeTitle_input: any;
    buttonText_today_input: any;
    timeDrillDown_enabled_input: any;
    timeDrillDown_interval_input: any;
    timeDrillDown_showMeridian_input: any;
    timeDrillDown_autoClose_input: any;
    options: any;
    beforeClose_output: EventEmitter<{}>;
    beforeOpen_output: EventEmitter<{}>;
    change_output: EventEmitter<{}>;
    ejchange_output: EventEmitter<{}>;
    close_output: EventEmitter<{}>;
    create_output: EventEmitter<{}>;
    destroy_output: EventEmitter<{}>;
    focusIn_output: EventEmitter<{}>;
    focusOut_output: EventEmitter<{}>;
    open_output: EventEmitter<{}>;
    constructor(el: ElementRef, cdRef: ChangeDetectorRef, _ejIterableDiffers: IterableDiffers, _ejkeyvaluediffers: KeyValueDiffers);
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
}
export declare var EJ_DATETIMEPICKER_COMPONENTS: Type<any>[];
