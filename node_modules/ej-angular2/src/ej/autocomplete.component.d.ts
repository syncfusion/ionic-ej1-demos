import 'syncfusion-javascript/Scripts/ej/web/ej.autocomplete.min';
import { EJComponents } from './core';
import { EventEmitter, IterableDiffers, KeyValueDiffers, Type, ElementRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare const AutocompleteValueAccessor: any;
export declare class AutocompleteComponent extends EJComponents<any, any> implements ControlValueAccessor {
    el: ElementRef;
    cdRef: ChangeDetectorRef;
    private _ejIterableDiffers;
    private _ejkeyvaluediffers;
    addNewText_input: any;
    allowAddNew_input: any;
    allowSorting_input: any;
    animateType_input: any;
    autoFocus_input: any;
    caseSensitiveSearch_input: any;
    cssClass_input: any;
    dataSource_input: any;
    delaySuggestionTimeout_input: any;
    delimiterChar_input: any;
    emptyResultText_input: any;
    enableAutoFill_input: any;
    enabled_input: any;
    enableDistinct_input: any;
    enablePersistence_input: any;
    enableRTL_input: any;
    fields_input: any;
    filterType_input: any;
    height_input: any;
    highlightSearch_input: any;
    itemsCount_input: any;
    ignoreAccent_input: any;
    locale_input: any;
    minCharacter_input: any;
    multiColumnSettings_input: any;
    multiSelectMode_input: any;
    popupHeight_input: any;
    popupWidth_input: any;
    query_input: any;
    readOnly_input: any;
    selectValueByKey_input: any;
    showEmptyResultText_input: any;
    showLoadingIcon_input: any;
    showPopupButton_input: any;
    showRoundedCorner_input: any;
    showResetIcon_input: any;
    sortOrder_input: any;
    template_input: any;
    validationMessage_input: any;
    validationRules_input: any;
    value_input: any;
    visible_input: any;
    watermarkText_input: any;
    width_input: any;
    fields_groupBy_input: any;
    fields_htmlAttributes_input: any;
    fields_key_input: any;
    fields_text_input: any;
    multiColumnSettings_enable_input: any;
    multiColumnSettings_showHeader_input: any;
    multiColumnSettings_stringFormat_input: any;
    multiColumnSettings_searchColumnIndices_input: any;
    multiColumnSettings_columns_input: any;
    options: any;
    actionBegin_output: EventEmitter<{}>;
    actionSuccess_output: EventEmitter<{}>;
    actionComplete_output: EventEmitter<{}>;
    actionFailure_output: EventEmitter<{}>;
    change_output: EventEmitter<{}>;
    ejchange_output: EventEmitter<{}>;
    close_output: EventEmitter<{}>;
    create_output: EventEmitter<{}>;
    destroy_output: EventEmitter<{}>;
    focusIn_output: EventEmitter<{}>;
    focusOut_output: EventEmitter<{}>;
    open_output: EventEmitter<{}>;
    select_output: EventEmitter<{}>;
    constructor(el: ElementRef, cdRef: ChangeDetectorRef, _ejIterableDiffers: IterableDiffers, _ejkeyvaluediffers: KeyValueDiffers);
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
}
export declare var EJ_AUTOCOMPLETE_COMPONENTS: Type<any>[];
